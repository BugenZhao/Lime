var max = |a, b| {
    if a > b { a; } else { b; }
};
var min = |a, b| {
    if a < b { a; } else { b; }
};
var add = |a, b| { a + b; };
var mul = |a, b| { a * b; };

var id = |x| { x; };

var assert_eq = |a, b| {
    if a &!= b { panic("Assertion failed:\n  left:", dbg(a), "\n right:", dbg(b)); }
    true;
};

class Pair { a, b }

impl Vec {
    assoc map = |self, fn| {
        var ret = [];
        var i = 0;
        while i < self.len() {
            ret.push(fn(self.get(i)));
            i = i + 1;
        }
        ret;
    };

    assoc fold = |self, initial, fn| {
        var acc = initial;
        var i = 0;
        while i < self.len() {
            acc = fn(acc, self.get(i));
            i = i + 1;
        }
        acc;
    };
}
